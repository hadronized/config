# Options, highlighters, etc.
colorscheme catppuccin_macchiato
set global indentwidth 2

add-highlighter global/ number-lines -hlcursor

# Commands

## Some pickers
define-command -hidden open_buffer_picker %{
  prompt buffer: -menu -buffer-completion %{
    buffer %val{text}
  }
}

define-command -hidden open_file_picker %{
  prompt file: -menu -shell-script-candidates 'fd --hidden --type=file' %{
    edit -existing %val{text}
  }
}

declare-user-mode match

define-command -hidden match-delete-surround -docstring 'delete surrounding key' %{
  on-key 'match-delete-surround-on-key'
}

define-command -hidden match-delete-surround-on-key %{
  execute-keys -draft "<a-a>%val{key}i<del><esc>a<backspace><esc>"
}

define-command surround-key -docstring 'surround key' %{
  on-key %{
    add-surrounding-pair %val{key} %val{key}
  }
}

define-command surround-tag -docstring 'surround tag' %{
  prompt surround-tag: %{
    add_surrounding_pair "<%val{text}>" "</%val{text}>"
  }
}
    
define-command -hidden add-surrounding-pair -params 2 %{
  evaluate-commands -save-regs '"' %{
    set-register '"' %arg{1}
    execute-keys -draft P
    set-register '"' %arg{2}
    execute-keys -draft p
  }
}
                            
map global normal m ':enter-user-mode match<ret>' -docstring "match mode"
map global match m m                              -docstring "select other matching delimiter"
map global match i '<a-i>'                        -docstring "match inside"
map global match a '<a-a>'                        -docstring "match around"
map global match d ':match-delete-surround<ret>'  -docstring "delete surround"

# LSP

eval %sh{kak-lsp --kakoune -s $kak_session}
hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp) %{
  lsp-enable-window

  # Enable inlay diagnostics
  lsp-inlay-diagnostics-enable window

  # Enable inlay hints
  lsp-inlay-diagnostics-enable window
}

# Enable semantic tokens
hook global WinSetOption filetype=rust %{
  hook window -group semantic-tokens BufReload .* lsp-semantic-tokens
  hook window -group semantic-tokens NormalIdle .* lsp-semantic-tokens
  hook window -group semantic-tokens InsertIdle .* lsp-semantic-tokens
  hook -once -always window WinSetOption filetype=.* %{
      remove-hooks window semantic-tokens
  }
}

# keybindings

## bépo remapping
map global normal c h # left
map global normal t j # down
map global normal s k # up
map global normal r l # right
map global normal C H # extend left
map global normal T J # extend down
map global normal S K # extend up
map global normal R L # extend right
map global normal h t # until
map global normal j r # replace
map global normal k s # select
map global normal l c # change
map global normal H T # extend to next char
map global normal J R # replace with yanked
map global normal K S # split
map global normal L C # duplicate selection downwards
map global insert ' ' ' '
map -docstring "line begin" global goto c h
map -docstring "buffer bottom" global goto t j
map -docstring "buffer top" global goto s k
map -docstring "line end" global goto r l
map -docstring "scroll left" global view c h
map -docstring "scroll up" global view t j
map -docstring "scroll down" global view s k
map -docstring "scroll right" global view r l

## pickers
map global user b ':open_buffer_picker<ret>' -docstring "Open buffer picker"
map global user f ':open_file_picker<ret>'   -docstring "Open file picker"
